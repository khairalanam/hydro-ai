---
import { Image } from "astro:assets";
import Navbar from "./Navbar.astro";

interface HeroProps {
    heroTitle: string,
    heroSubtitle: string,
    imageSrc: string
}

const heroInfo: HeroProps[] = [
    {
        heroTitle: "Welcome to HydroAI",
        heroSubtitle: "We use machine learning and AI to detect the pollution in water.",
        imageSrc: "/water-bg-1.jpg"
    },
    {
        heroTitle: "Purifying Water with ML",
        heroSubtitle: "We provide you with all the data that pertains to the water pollution.",
        imageSrc: "/water-bg-2.jpg"
    },
    {
        heroTitle: "Save Water with HydroAI",
        heroSubtitle: "Start using our AI-powered water monitoring and get the results",
        imageSrc: "/water-bg-3.jpg",
    },
]

---

<section class="z-10">
    <section id="carousel" class="w-full min-h-screen max-sm:max-h-screen flex justify-start relative overflow-x-hidden">
        <section id="slider" class="flex h-full w-[300%] shrink-0 transition-all duration-[500ms] ease-in">
            {
                heroInfo.map(hero => (
                    <section class="basis-1/3 shrink-0 flex-1 w-1/3 flex max-sm:flex-col items-center justify-between">
                        <div class="max-sm:min-w-full flex-1 h-full flex flex-col justify-center px-6 py-4 md:pl-14 md:py-0 md:pr-0 lg:pl-20 max-w-[50%]">
                            <h1 class="">{hero.heroTitle}</h1>
                            <h2 class="">{hero.heroSubtitle}</h2>
                        </div>
                        <Image src={hero.imageSrc} alt="Water background" width={100} height={100} class="flex-1 max-h-screen min-h-screen max-sm:w-full" />
                    </section>
                ))
            }
        </section>
        <section>
            <span id="prev" class="absolute cursor-pointer top-3 left-3 border-2 border-purple-400 z-30">prev</span>
            <span id="next" class="absolute cursor-pointer top-3 right-3 border-2 border-purple-400 z-30">next</span>
        </section>
    </section>
</section>

<script>
    const slider = document.querySelector("#slider") as HTMLTableSectionElement;
    const carousel = document.querySelector("#carousel") as HTMLTableSectionElement;
    const prev = document.querySelector("#prev")!;
    const next = document.querySelector("#next")!;
    let direction: number = -1;
    let isTransitioning: boolean = false;

    prev.addEventListener("click", () => {
        if (!isTransitioning) {
            if (direction === -1) {
                slider.appendChild(slider.firstElementChild!);
                direction = 1;
            }
            carousel.style.justifyContent = "flex-end";
            slider.style.transform = "translate(33.3%)";
        }
    });

    next.addEventListener("click", () => {
        if (!isTransitioning) {
            if (direction === 1) {
                slider.prepend(slider.lastElementChild!);
                direction = -1;
            }
            direction = -1;
            slider.style.transform = "translate(-33.3%)";
            carousel.style.justifyContent = "flex-start";
        }
    });

    slider.addEventListener("transitionend", () => {
        if (direction === -1) slider.appendChild(slider.firstElementChild!);
        else if (direction === 1) slider.prepend(slider.lastElementChild!);
        slider.style.transition = "none";
        slider.style.transform = "translate(0)";
        setTimeout(() => {
            slider.style.transition = "all 500ms ease-in";
            isTransitioning = false;
        })
    });

    slider.addEventListener("transitionstart", () => {
        isTransitioning = true;
    });
</script>